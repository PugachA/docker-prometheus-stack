version: '3.7'

services:
  prometheus:
    image: prom/prometheus:v2.24.1
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=2y'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - monitoring
    deploy:
      mode: replicated
      replicas: 1

  alertmanager:
    image: prom/alertmanager:v0.21.0
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    ports:
      - 9093:9093
    networks:
      - monitoring
    deploy:
      mode: replicated
      replicas: 1
      
  telegram:
    image: metalmatze/alertmanager-bot:0.4.3
    volumes:
      - telegram_data:/data
    command:
      - --alertmanager.url=http://alertmanager:9093
      - --log.level=info
      - --store=bolt
      - --bolt.path=/data/bot.db
    environment:
      TELEGRAM_ADMIN: ""
      TELEGRAM_TOKEN: ""
    ports:
      - 8080:8080
    networks:
      - monitoring
    deploy:
      mode: replicated
      replicas: 1

  grafana:
    image: grafana/grafana:7.3.7
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - 3000:3000
    networks:
      - monitoring
    deploy:
      mode: replicated
      replicas: 1

  pushgateway:
    image: prom/pushgateway:v1.4.0
    ports:
      - 9091:9091
    networks:
      - monitoring
    deploy:
      mode: replicated
      replicas: 1

networks:
  monitoring:
    driver: overlay

volumes:
    prometheus_data: {}
    grafana_data: {}
    telegram_data: {}